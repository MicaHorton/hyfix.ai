{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mica/Projects/HYFIX/Website/frontend/src/components/store/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useEffect, useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useCookies } from 'react-cookie';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { getProductsInCart, createPaymentIntent } from '../../api'; // Custom styling can be passed to options when creating an Element.\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: '#32325d',\n      fontFamily: '\"Helvetica Neue\" , Helvetica, sans-serif',\n      fontSmoothing: 'antialiased',\n      fontSize: '40px',\n      '::placeholder': {\n        color: '#aab7c4'\n      }\n    },\n    invalid: {\n      color: '#fa755a',\n      iconColor: '#fa755a'\n    }\n  }\n};\n\nconst CheckoutForm = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [clientSecret, setClientSecret] = useState(null);\n  const [cookies] = useCookies();\n  const [metadata, setMetadata] = useState(null);\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  useEffect(() => {\n    const productList = cookies.userCart;\n    getProductsInCart(productList).then(products => {\n      createPaymentIntent(products).then(clientSecret => {\n        console.log('Payment intent success!');\n        setClientSecret(clientSecret);\n      }).catch(err => {\n        setError(err.message);\n      });\n    });\n  }, []); //keeps hook to only once, intresting?\n\n  const handleChange = ev => {\n    if (ev.error) {\n      setError(ev.error.message);\n    } else {\n      setError(null);\n    }\n  };\n\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: ev.target.name.value\n        }\n      }\n    });\n\n    if (payload.error) {\n      setError(`Payment failed: ${payload.error.message}`);\n      setProcessing(false);\n      console.log(\"[error]\", payload.error);\n    } else {\n      setError(null);\n      setSucceeded(true);\n      setProcessing(false);\n      setMetadata(payload.paymentIntent);\n      console.log(\"[PaymentIntent]\", payload.paymentIntent);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"checkout-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"checkout-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shipping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipient Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Street Adress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"double-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Zip Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"card-element\",\n          children: \"Credit or Debit Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n          id: \"card-element\",\n          options: CARD_ELEMENT_OPTIONS,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-errors\",\n          role: \"alert\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button checkout-button\",\n        type: \"submit\",\n        children: \"Submit Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"L9jEB5oz7M/+rKfHQegxKMaKYqE=\", false, function () {\n  return [useStripe, useElements, useCookies];\n});\n\n_c = CheckoutForm;\nconst stripePromise = loadStripe('pk_test_51I0CsSIzd0xoN2NEasujFfk8OIEYrwO5KrdT4fYAjUiQ8iJVP1fumZ3XGDf1XJq0Q3C9I0wlsQxbtYY2xRAvP2eZ0024wl5yqd');\n\nconst CheckoutPage = () => {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = CheckoutPage;\nexport default CheckoutPage;\n/* 4242 4242 4242 4242 */\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"CheckoutPage\");","map":{"version":3,"sources":["/Users/mica/Projects/HYFIX/Website/frontend/src/components/store/Checkout.js"],"names":["React","Component","useEffect","useState","loadStripe","useCookies","CardElement","Elements","useElements","useStripe","getProductsInCart","createPaymentIntent","CARD_ELEMENT_OPTIONS","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CheckoutForm","stripe","elements","error","setError","clientSecret","setClientSecret","cookies","metadata","setMetadata","succeeded","setSucceeded","processing","setProcessing","productList","userCart","then","products","console","log","catch","err","message","handleChange","ev","handleSubmit","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","billing_details","name","target","value","paymentIntent","stripePromise","CheckoutPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { useEffect, useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useCookies } from 'react-cookie';\nimport {\n  CardElement,\n  Elements,\n  useElements,\n  useStripe\n} from '@stripe/react-stripe-js';\nimport { getProductsInCart, createPaymentIntent} from '../../api';\n\n\n// Custom styling can be passed to options when creating an Element.\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: '#32325d',\n      fontFamily: '\"Helvetica Neue\" , Helvetica, sans-serif',\n      fontSmoothing: 'antialiased',\n      fontSize: '40px',\n      '::placeholder': {\n        color: '#aab7c4'\n      }\n    },\n    invalid: {\n      color: '#fa755a',\n      iconColor: '#fa755a'\n    }\n  }\n};\n\nconst CheckoutForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [error, setError] = useState(null);\n  const [clientSecret, setClientSecret] = useState(null);\n  const [cookies] = useCookies();\n\n  const [metadata, setMetadata] = useState(null);\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(false);\n\n  useEffect(() => {\n    const productList = cookies.userCart;\n    getProductsInCart(productList).then((products) => { \n      \n      createPaymentIntent(products)\n      .then((clientSecret) => {\n        console.log('Payment intent success!')\n        setClientSecret(clientSecret);\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n    \n    });\n\n  }, []); //keeps hook to only once, intresting?\n\n  const handleChange = (ev) => {\n    if (ev.error) {\n      setError(ev.error.message);\n    } else {\n      setError(null);\n    }\n  }\n\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    setProcessing(true);\n    \n\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: ev.target.name.value,\n        },\n      },\n    });\n\n    if (payload.error) {\n      setError(`Payment failed: ${payload.error.message}`);\n      setProcessing(false);\n      console.log(\"[error]\", payload.error);\n    } else {\n      setError(null);\n      setSucceeded(true);\n      setProcessing(false);\n      setMetadata(payload.paymentIntent);\n      console.log(\"[PaymentIntent]\", payload.paymentIntent);\n    }\n\n  };\n\n  return (\n    <main className='checkout-page'>\n      <form className='checkout-form' onSubmit={handleSubmit}>\n\n          <div className='form-section'>\n            <h2>Shipping</h2>\n\n            <label>Recipient Name</label>\n            <input />\n\n            <label>Street Adress</label>\n            <input />\n\n            <label>City</label>\n            <input />\n\n            <div className='double-input'>\n              <label>State</label>\n              <input />\n\n              <label>Zip Code</label>\n              <input />\n            </div>\n            \n\n            <label>Country</label>\n            <input />\n\n          </div>\n\n          <div className='form-section'>\n            <h2>Payment</h2>\n            <label htmlFor='card-element'>Credit or Debit Card</label>\n            <CardElement \n              id='card-element' \n              options={CARD_ELEMENT_OPTIONS} \n              onChange={handleChange}/>\n            <div className='card-errors' role='alert'>{error}</div>\n          </div>\n\n          <button className='button checkout-button' type='submit'>Submit Payment</button>\n\n      </form>\n    </main>\n    \n  );\n}\n\nconst stripePromise = loadStripe('pk_test_51I0CsSIzd0xoN2NEasujFfk8OIEYrwO5KrdT4fYAjUiQ8iJVP1fumZ3XGDf1XJq0Q3C9I0wlsQxbtYY2xRAvP2eZ0024wl5yqd');\nconst CheckoutPage = () => {\n  return (\n    <Elements stripe={stripePromise}>\n      <CheckoutForm />\n    </Elements>\n  );\n}\n\nexport default CheckoutPage; \n\n\n/* 4242 4242 4242 4242 */"]},"metadata":{},"sourceType":"module"}
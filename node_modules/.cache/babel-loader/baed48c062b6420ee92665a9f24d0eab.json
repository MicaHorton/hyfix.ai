{"ast":null,"code":"import axios from 'axios';\nconst base = 'http://localhost:5000/'; // const base = 'https://api.hyfix.ai/'\n// Products\n\nexport const getAllProducts = async () => {\n  return axios.get(base + 'products/').then(res => {\n    return res.data;\n  }).catch(err => {\n    return err;\n  });\n}; // export const getProductsByCategory = (category) => {\n//     return axios\n//         .get(base + 'products/category/' + category)\n//         .then((res) => {\n//             console.log('category res', res)\n//             return res.data\n//         })\n//         .catch((err) => {\n//             return err\n//         })\n// }\n// export const getSingleProduct = (productId) => {\n//     return axios\n//         .get(base + 'products/' + productId)\n//         .then((res) => {\n//             return res.data\n//         })\n//         .catch((err) => {\n//             return err\n//         })\n// }\n\nexport const getProductsInCart = async productList => {\n  const products = await getAllProducts();\n  const productsInCart = products.filter(product => product.id in productList);\n  console.log(productsInCart);\n  return productsInCart; // let product\n  // let fetchedProducts = []\n  // for (product in productList) {\n  //     let fetchedProduct = await getSingleProduct(productList[product])\n  //     fetchedProducts.push(fetchedProduct)\n  // }\n  // console.log(fetchedProducts)\n  // return fetchedProducts\n\n  /*\n  return axios.get(base + 'products/cart', {\n      params: {\n      products: productList\n  }\n  })\n  .then(res => {\n      console.log('cart response', res.data);\n      return res.data;\n  })\n  .catch((err) => {\n      return err\n  });*/\n}; // Payment\n\nexport const getPublicStripeKey = () => {\n  return axios.get(base + 'payment/public-key').then(res => {\n    return res;\n  }).catch(err => {\n    return err;\n  });\n};\nexport const createPaymentIntent = products => {\n  return axios.post(base + 'payment/create-payment-intent', {\n    products: products\n  }).then(res => {\n    console.log('payment intent', res);\n    return res.data.client_secret;\n  }).catch(err => {\n    return err;\n  });\n};","map":{"version":3,"sources":["/Users/mica/Projects/Websites/hyfix/frontend/src/api.js"],"names":["axios","base","getAllProducts","get","then","res","data","catch","err","getProductsInCart","productList","products","productsInCart","filter","product","id","console","log","getPublicStripeKey","createPaymentIntent","post","client_secret"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,IAAI,GAAG,wBAAb,C,CACA;AAEA;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC,SAAOF,KAAK,CACPG,GADE,CACEF,IAAI,GAAG,WADT,EAEFG,IAFE,CAEIC,GAAD,IAAS;AACX,WAAOA,GAAG,CAACC,IAAX;AACH,GAJE,EAKFC,KALE,CAKKC,GAAD,IAAS;AACZ,WAAOA,GAAP;AACH,GAPE,CAAP;AAQH,CATM,C,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,WAAP,IAAuB;AACpD,QAAMC,QAAQ,GAAG,MAAMT,cAAc,EAArC;AACA,QAAMU,cAAc,GAAGD,QAAQ,CAACE,MAAT,CAClBC,OAAD,IAAaA,OAAO,CAACC,EAAR,IAAcL,WADR,CAAvB;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,cAAZ;AACA,SAAOA,cAAP,CAPoD,CASpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CA9BM,C,CAgCP;;AACA,OAAO,MAAMM,kBAAkB,GAAG,MAAM;AACpC,SAAOlB,KAAK,CACPG,GADE,CACEF,IAAI,GAAG,oBADT,EAEFG,IAFE,CAEIC,GAAD,IAAS;AACX,WAAOA,GAAP;AACH,GAJE,EAKFE,KALE,CAKKC,GAAD,IAAS;AACZ,WAAOA,GAAP;AACH,GAPE,CAAP;AAQH,CATM;AAWP,OAAO,MAAMW,mBAAmB,GAAIR,QAAD,IAAc;AAC7C,SAAOX,KAAK,CACPoB,IADE,CACGnB,IAAI,GAAG,+BADV,EAC2C;AAC1CU,IAAAA,QAAQ,EAAEA;AADgC,GAD3C,EAIFP,IAJE,CAIIC,GAAD,IAAS;AACXW,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BZ,GAA9B;AACA,WAAOA,GAAG,CAACC,IAAJ,CAASe,aAAhB;AACH,GAPE,EAQFd,KARE,CAQKC,GAAD,IAAS;AACZ,WAAOA,GAAP;AACH,GAVE,CAAP;AAWH,CAZM","sourcesContent":["import axios from 'axios'\nconst base = 'http://localhost:5000/'\n// const base = 'https://api.hyfix.ai/'\n\n// Products\nexport const getAllProducts = async () => {\n    return axios\n        .get(base + 'products/')\n        .then((res) => {\n            return res.data\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\n// export const getProductsByCategory = (category) => {\n//     return axios\n//         .get(base + 'products/category/' + category)\n//         .then((res) => {\n//             console.log('category res', res)\n//             return res.data\n//         })\n//         .catch((err) => {\n//             return err\n//         })\n// }\n\n// export const getSingleProduct = (productId) => {\n//     return axios\n//         .get(base + 'products/' + productId)\n//         .then((res) => {\n//             return res.data\n//         })\n//         .catch((err) => {\n//             return err\n//         })\n// }\n\nexport const getProductsInCart = async (productList) => {\n    const products = await getAllProducts()\n    const productsInCart = products.filter(\n        (product) => product.id in productList\n    )\n\n    console.log(productsInCart)\n    return productsInCart\n\n    // let product\n    // let fetchedProducts = []\n    // for (product in productList) {\n    //     let fetchedProduct = await getSingleProduct(productList[product])\n    //     fetchedProducts.push(fetchedProduct)\n    // }\n    // console.log(fetchedProducts)\n    // return fetchedProducts\n    /*\n    return axios.get(base + 'products/cart', {\n        params: {\n        products: productList\n    }\n    })\n    .then(res => {\n        console.log('cart response', res.data);\n        return res.data;\n    })\n    .catch((err) => {\n        return err\n    });*/\n}\n\n// Payment\nexport const getPublicStripeKey = () => {\n    return axios\n        .get(base + 'payment/public-key')\n        .then((res) => {\n            return res\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const createPaymentIntent = (products) => {\n    return axios\n        .post(base + 'payment/create-payment-intent', {\n            products: products\n        })\n        .then((res) => {\n            console.log('payment intent', res)\n            return res.data.client_secret\n        })\n        .catch((err) => {\n            return err\n        })\n}\n"]},"metadata":{},"sourceType":"module"}
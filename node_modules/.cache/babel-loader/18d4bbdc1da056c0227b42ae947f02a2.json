{"ast":null,"code":"import axios from 'axios';\nimport { loadStripe } from '@stripe/stripe-js'; // const base = 'http://localhost:5000/';\n\nconst base = 'https://api.hyfix.ai/';\n\nrequire('dotenv').config();\n\nconsole.log(process.env.STRIPE_PUBLIC_KEY);\nconst stripePromise = loadStripe(process.env.STRIPE_PUBLIC_KEY); // const stripe = require('stripe')(process.env.STRIPE_SECRET);\n// Products\n\nexport const getAllProducts = async () => {\n  const stripe = await stripePromise;\n  console.log(stripe); // return await stripe.products.list({limit: 3})\n  // .then(res => {\n  //     console.log(res.data)\n  //     return res.data;\n  // })\n  // .catch((err) => {\n  //     return err\n  // }) \n  // return axios.get(base + 'products/') \n  // .then(res => {\n  //         return res.data;\n  // })\n  // .catch((err) => {\n  //         return err\n  //  }) \n};\nexport const getProductsByCategory = category => {\n  console.log('hello');\n  return axios.get(base + 'products/category/' + category).then(res => {\n    console.log('category res', res);\n    return res.data;\n  }).catch(err => {\n    return err;\n  });\n};\nexport const getSingleProduct = productId => {\n  return axios.get(base + 'products/' + productId).then(res => {\n    return res.data;\n  }).catch(err => {\n    return err;\n  });\n};\nexport const getProductsInCart = async productList => {\n  let product;\n  let fetchedProducts = [];\n\n  for (product in productList) {\n    let fetchedProduct = await getSingleProduct(productList[product]);\n    fetchedProducts.push(fetchedProduct);\n  }\n\n  console.log(fetchedProducts);\n  return fetchedProducts;\n  /*\n  return axios.get(base + 'products/cart', {\n      params: { \n      products: productList \n  }\n  })\n  .then(res => {\n      console.log('cart response', res.data);\n      return res.data;\n  })\n  .catch((err) => {\n      return err\n  });*/\n}; // Payment \n\nexport const getPublicStripeKey = () => {\n  return axios.get(base + 'payment/public-key').then(res => {\n    return res;\n  }).catch(err => {\n    return err;\n  });\n};\nexport const createPaymentIntent = products => {\n  return axios.post(base + 'payment/create-payment-intent', {\n    products: products\n  }).then(res => {\n    console.log('payment intent', res);\n    return res.data.client_secret;\n  }).catch(err => {\n    return err;\n  });\n};","map":{"version":3,"sources":["/Users/mica/Projects/Websites/hyfix/frontend/src/api.js"],"names":["axios","loadStripe","base","require","config","console","log","process","env","STRIPE_PUBLIC_KEY","stripePromise","getAllProducts","stripe","getProductsByCategory","category","get","then","res","data","catch","err","getSingleProduct","productId","getProductsInCart","productList","product","fetchedProducts","fetchedProduct","push","getPublicStripeKey","createPaymentIntent","products","post","client_secret"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CACA;;AACA,MAAMC,IAAI,GAAG,uBAAb;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,iBAAxB;AACA,MAAMC,aAAa,GAAGT,UAAU,CAACM,OAAO,CAACC,GAAR,CAAYC,iBAAb,CAAhC,C,CACA;AAKA;;AACA,OAAO,MAAME,cAAc,GAAG,YAAY;AAEtC,QAAMC,MAAM,GAAG,MAAMF,aAArB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ,EAHsC,CAItC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAtBM;AAwBP,OAAO,MAAMC,qBAAqB,GAAGC,QAAQ,IAAI;AAC7CT,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAON,KAAK,CAACe,GAAN,CAAUb,IAAI,GAAG,oBAAP,GAA8BY,QAAxC,EACNE,IADM,CACDC,GAAG,IAAI;AACLZ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BW,GAA5B;AACA,WAAOA,GAAG,CAACC,IAAX;AACP,GAJM,EAKNC,KALM,CAKCC,GAAD,IAAS;AACR,WAAOA,GAAP;AACN,GAPK,CAAP;AAQH,CAVM;AAYP,OAAO,MAAMC,gBAAgB,GAAGC,SAAS,IAAI;AACzC,SAAOtB,KAAK,CAACe,GAAN,CAAUb,IAAI,GAAG,WAAP,GAAqBoB,SAA/B,EACNN,IADM,CACDC,GAAG,IAAI;AACL,WAAOA,GAAG,CAACC,IAAX;AACP,GAHM,EAINC,KAJM,CAICC,GAAD,IAAS;AACR,WAAOA,GAAP;AACN,GANK,CAAP;AAQH,CATM;AAWP,OAAO,MAAMG,iBAAiB,GAAG,MAAMC,WAAN,IAAqB;AAClD,MAAIC,OAAJ;AACA,MAAIC,eAAe,GAAG,EAAtB;;AACA,OAAKD,OAAL,IAAgBD,WAAhB,EAA6B;AACzB,QAAIG,cAAc,GAAG,MAAMN,gBAAgB,CAACG,WAAW,CAACC,OAAD,CAAZ,CAA3C;AACAC,IAAAA,eAAe,CAACE,IAAhB,CAAqBD,cAArB;AAEH;;AACDtB,EAAAA,OAAO,CAACC,GAAR,CAAYoB,eAAZ;AACA,SAAOA,eAAP;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,CA1BM,C,CA4BP;;AACA,OAAO,MAAMG,kBAAkB,GAAG,MAAM;AACpC,SAAO7B,KAAK,CAACe,GAAN,CAAUb,IAAI,GAAG,oBAAjB,EACNc,IADM,CACDC,GAAG,IAAI;AAAC,WAAOA,GAAP;AAAW,GADlB,EAENE,KAFM,CAEAC,GAAG,IAAI;AAAC,WAAOA,GAAP;AAAW,GAFnB,CAAP;AAGH,CAJM;AAMP,OAAO,MAAMU,mBAAmB,GAAGC,QAAQ,IAAI;AAC3C,SAAO/B,KAAK,CAACgC,IAAN,CAAW9B,IAAI,GAAG,+BAAlB,EAAmD;AACtD6B,IAAAA,QAAQ,EAAEA;AAD4C,GAAnD,EAGNf,IAHM,CAGDC,GAAG,IAAI;AACTZ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BW,GAA9B;AACA,WAAOA,GAAG,CAACC,IAAJ,CAASe,aAAhB;AACH,GANM,EAONd,KAPM,CAOCC,GAAD,IAAS;AACZ,WAAOA,GAAP;AACH,GATM,CAAP;AAWH,CAZM","sourcesContent":["import axios from 'axios';\nimport { loadStripe } from '@stripe/stripe-js';\n// const base = 'http://localhost:5000/';\nconst base = 'https://api.hyfix.ai/';\n\nrequire('dotenv').config();\nconsole.log(process.env.STRIPE_PUBLIC_KEY);\nconst stripePromise = loadStripe(process.env.STRIPE_PUBLIC_KEY);\n// const stripe = require('stripe')(process.env.STRIPE_SECRET);\n\n\n\n\n// Products\nexport const getAllProducts = async () => {\n\n    const stripe = await stripePromise;\n    console.log(stripe);\n    // return await stripe.products.list({limit: 3})\n    // .then(res => {\n    //     console.log(res.data)\n    //     return res.data;\n    // })\n    // .catch((err) => {\n    //     return err\n    // }) \n\n    \n    \n    // return axios.get(base + 'products/') \n    // .then(res => {\n    //         return res.data;\n    // })\n    // .catch((err) => {\n    //         return err\n    //  }) \n}\n\nexport const getProductsByCategory = category => {\n    console.log('hello');\n    return axios.get(base + 'products/category/' + category) \n    .then(res => {\n            console.log('category res', res);\n            return res.data;\n    })\n    .catch((err) => {\n            return err\n     })\n}\n\nexport const getSingleProduct = productId => {\n    return axios.get(base + 'products/' + productId) \n    .then(res => {\n            return res.data;\n    })\n    .catch((err) => {\n            return err\n     })\n    \n}\n\nexport const getProductsInCart = async productList => {\n    let product;\n    let fetchedProducts = [];\n    for (product in productList) {\n        let fetchedProduct = await getSingleProduct(productList[product]);\n        fetchedProducts.push(fetchedProduct);\n\n    }\n    console.log(fetchedProducts);\n    return fetchedProducts;\n\n\n    /*\n    return axios.get(base + 'products/cart', {\n        params: { \n        products: productList \n    }\n    })\n    .then(res => {\n        console.log('cart response', res.data);\n        return res.data;\n    })\n    .catch((err) => {\n        return err\n    });*/\n\n};\n\n// Payment \nexport const getPublicStripeKey = () => {\n    return axios.get(base + 'payment/public-key')\n    .then(res => {return res})\n    .catch(err => {return err})\n};\n\nexport const createPaymentIntent = products => {\n    return axios.post(base + 'payment/create-payment-intent', {\n        products: products\n    })\n    .then(res => {\n        console.log('payment intent', res);\n        return res.data.client_secret\n    })\n    .catch((err) => {\n        return err\n    });\n\n};\n    \n\n    "]},"metadata":{},"sourceType":"module"}